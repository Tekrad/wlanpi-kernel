name: Build WLAN Pi Kernel for Debian Bookworm

on:
  push:
    branches:
      - 6.12-bookworm
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-24.04

    env:
      DISTRO: bookworm
      VERSION_CODENAME: bookworm
      KERNEL_TARGET_DISTRO: Debian
      KERNEL_TARGET_VERSION: bookworm

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Restore APT Cache
        uses: actions/cache@v3
        with:
          path: cache-apt
          key: ${{ runner.os }}-apt-${{ hashFiles('**/build/build-wlanpi-kernel.sh') }}
          restore-keys: |
            ${{ runner.os }}-apt-

      - name: Prepare APT Cache for Caching
        run: |
          mkdir -p cache-apt
          find /var/cache/apt/archives -path /var/cache/apt/archives/partial -prune -o -type f -name '*.deb' -exec cp {} cache-apt/ \;

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential git libncurses-dev flex bison libssl-dev \
              bc libelf-dev libudev-dev libpci-dev libiberty-dev autoconf automake libtool \
              libpython3-dev crossbuild-essential-arm64 dpkg-dev gcc-aarch64-linux-gnu

      - name: Cache Kernel Build Directory
        uses: actions/cache@v3
        with:
          path: linux
          key: ${{ runner.os }}-kernel-${{ hashFiles('**/build/build-wlanpi-kernel.sh') }}
          restore-keys: |
            ${{ runner.os }}-kernel-

      - name: Make Build Script Executable
        run: chmod +x build/build-wlanpi-kernel.sh

      - name: Execute Build Script
        id: build-kernel
        run: ./build/build-wlanpi-kernel.sh

      - name: Extract Kernel Version and Date
        id: version-info
        run: |
          DEB_FILE=$(ls output/*.deb | head -n 1)
          echo "Extracting kernel version from $DEB_FILE..."
          KERNEL_VERSION=$(basename "$DEB_FILE" | grep -Po 'wlanpi-kernel-\K[^-]+')
          BUILD_DATE=$(date +%Y%m%d)
          PACKAGE_NAME="wlanpi-kernel-${KERNEL_VERSION}-${BUILD_DATE}"
          echo "KERNEL_VERSION=$KERNEL_VERSION" >> $GITHUB_ENV
          echo "BUILD_DATE=$BUILD_DATE" >> $GITHUB_ENV
          echo "PACKAGE_NAME=$PACKAGE_NAME" >> $GITHUB_ENV

      - name: Debug Kernel Version
        run: |
          echo "Kernel Version: ${{ env.KERNEL_VERSION }}"
          echo "Build Date: ${{ env.BUILD_DATE }}"
          echo "Package Name: ${{ env.PACKAGE_NAME }}"

      - name: Upload Debian Package
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PACKAGE_NAME }}-deb-bookworm
          path: output/*.deb

